# INF360 - Programming in Python
# Joseph Barnes
# Final
# Document Formatting Toolkit

'''
NOTE: Testing guide and text available to copy-paste at the bottom.

Purpose:
At my job I format documents that have been translated into other languages.
This Program is a toolkit for formatting documents that have been translated
into languages such as Arabic, that read from Right-to-Left. Microsoft word
tends to ruin things like phone numbers by turning a number like
(123)-456-7890 into 7890-456-(123) and I have to manually fix each one. But no longer!


This program offers the following tools: 
1. Find all phone numbers in a document and replace them with the corrected phone number
2. Removes all newline characters from a copy-pasted text
3. Lists all dates in a copy-pasted string so user can review formatting to make sure translators flipped them correctly
4. Renames files so the standard language code is replaced with the full name of the language
'''

import os  # to clear the screen
import sys  # for sys.exit() to leave program
import time  # pauses briefly after a function ends
import logging
logging.basicConfig(filename='joeProgramLog.txt', level=logging.DEBUG, 
                    format='%(asctime)s -  %(levelname)s -  %(message)s')

#TODO Replace YUrmom with real file that holds dictionaries or something.
try:
    import functions as fn
    #import brokefunctions
    logging.debug('functions loaded successfully!')
except:
    print('brokefunctions.py is missing! Program will now exit!')
    logging.critical('brokefunctions.py is missing! Program will now exit!')
    sys.exit()

def main_menu():  # displays the main menu
    print("Welcome to the formatter's toolkit.\n What would you like to do today?\n")
    continueUse = ''
    choice = ''
    while (continueUse != '0'):
        os.system('cls')  # clear the screen
        # Display main menu
        print('''-------Please select a tool by number.-------
        1. Correct RTL phone numbers
        2. Remove newline characters
        3. Review date formatting
        4. Add full language name to completed file names
        Enter Anything else to Exit
        ''')

        choice = input()  # get user choice
        # validate_choice() # ensure user enters correct info
        os.system('cls')  # clear the screen

        # call the menu choice
        if (choice == '1'):
            fn.RTL_phone_nums()
        elif (choice == '2'):
            fn.remove_newline()
        elif (choice == '3'):
            fn.review_dates()
        elif (choice == '4'):
            fn.replace_language_codes()
        else:
            print("Goodbye!")
            sys.exit()
        time.sleep(2)
        continueUse = input(
            "Press any key to use another tool. Enter 0 to exit. ")
    # end while
    print("Goodbye!")
# end mainMenu()

main_menu()  # start the program

# example code to test this program's tools below:
#
# Option 1: Copy paste this code into a .txt file to test
#
# test the bad numbers 
'''7890 456 123 
test 7890.456.123 
test 7890-456-123 
test 7890 456 
test 7890-456 (123) 
test 7890-(123)456 

test the good numbers (shouldn't change)
123-456-7890 
test 123 4567 
test (123) 456 7890
'''
#
# Option 2:
# Just type anything on keyboard and enter several lines
# 
# Option 3:
# 4/4/2023 4/5/71 2013/29/7 1343/92/23 1234 test (this could be italic issue...11/11/11) 11|1112011
#
# Option 4:
# Create a file that has "(es)" at the end of the filename i.e. test(es).txt
# Other examples: test(fr).txt      test_(ar).txt     test (sw).txt
